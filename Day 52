#First Problem
class Solution(object):
    def dayOfYear(self, date):
        thirties = [4, 6, 9, 11]
        february = 2
        date = date.split("-")
        year = int(date[0])
        month = int(date[1])
        day = int(date[2])
        for i in range(1, month):
            if i == february:
                if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
                    day += 29
                else:
                    day += 28
            elif i in thirties:
                day += 30
            else:
                day += 31

        return day



#Second Problem
class Solution(object):
    def countCharacters(self, words, chars):
        from collections import Counter

        chars_count = Counter(chars)
        total_length = 0
        
        for word in words:
            word_count = Counter(word)

            can_form = True
            for char, count in word_count.items():
                if chars_count[char] < count:
                    can_form = False
                    break
                    
            if can_form:
                total_length += len(word)
        
        return total_length



#Third Problem
class Solution(object):
    def numPrimeArrangements(self, n):
        MOD = 10**9 + 7
    
        def sieve(n):
            is_prime = [True] * (n + 1)
            is_prime[0] = is_prime[1] = False
            for i in range(2, int(n**0.5) + 1):
                if is_prime[i]:
                    for j in range(i * i, n + 1, i):
                        is_prime[j] = False
            return is_prime
        
        def factorial(num):
            result = 1
            for i in range(2, num + 1):
                result = (result * i) % MOD
            return result
        
        is_prime = sieve(n)
        prime_count = sum(is_prime[:n + 1])
        non_prime_count = n - prime_count
        
        return (factorial(prime_count) * factorial(non_prime_count)) % MOD



#Fourth Problem
SELECT 
    id,
    MAX(CASE WHEN month = 'Jan' THEN revenue ELSE NULL END) AS Jan_Revenue,
    MAX(CASE WHEN month = 'Feb' THEN revenue ELSE NULL END) AS Feb_Revenue,
    MAX(CASE WHEN month = 'Mar' THEN revenue ELSE NULL END) AS Mar_Revenue,
    MAX(CASE WHEN month = 'Apr' THEN revenue ELSE NULL END) AS Apr_Revenue,
    MAX(CASE WHEN month = 'May' THEN revenue ELSE NULL END) AS May_Revenue,
    MAX(CASE WHEN month = 'Jun' THEN revenue ELSE NULL END) AS Jun_Revenue,
    MAX(CASE WHEN month = 'Jul' THEN revenue ELSE NULL END) AS Jul_Revenue,
    MAX(CASE WHEN month = 'Aug' THEN revenue ELSE NULL END) AS Aug_Revenue,
    MAX(CASE WHEN month = 'Sep' THEN revenue ELSE NULL END) AS Sep_Revenue,
    MAX(CASE WHEN month = 'Oct' THEN revenue ELSE NULL END) AS Oct_Revenue,
    MAX(CASE WHEN month = 'Nov' THEN revenue ELSE NULL END) AS Nov_Revenue,
    MAX(CASE WHEN month = 'Dec' THEN revenue ELSE NULL END) AS Dec_Revenue
FROM 
    Department
GROUP BY 
    id;




