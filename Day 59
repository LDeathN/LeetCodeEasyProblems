#First Problem
class Solution(object):
    def countNegatives(self, grid):
        count = 0
        for x in grid:
            for y in x:
                if y < 0:
                    count += 1
        
        return count



#Second Problem
class Solution(object):
    def sortByBits(self, arr):
        def sort_key(x):
            return (bin(x).count('1'), x)

        arr.sort(key=sort_key)
        
        return arr



#Third Problem
class Solution(object):
    def daysBetweenDates(self, date1, date2):
        from datetime import datetime
        date_format = "%Y-%m-%d"
        d1 = datetime.strptime(date1, date_format)
        d2 = datetime.strptime(date2, date_format)

        delta = abs((d2 - d1).days)
        return delta



#Fourth Problem
class Solution(object):
    def smallerNumbersThanCurrent(self, nums):
        result = []
        for x in nums:
            count = 0
            for y in nums:
                if y < x:
                    count += 1
            result.append(count)
            
        return result



#Fifth Problem
class Solution(object):
    def sortString(self, s):
        result = []
        while s:
            for char in sorted(set(s)):
                result.append(char)
                s = s.replace(char, '', 1)

            for char in sorted(set(s), reverse=True):
                result.append(char)
                s = s.replace(char, '', 1)
        
        return ''.join(result)



#Sixth Problem
class Solution(object):
    def generateTheString(self, n):
        if n % 2 != 0:
            return "p" * n
        else:
            return ("p" * (n - 1)) + "a"



#Seventh Problem
SELECT eu.unique_id, e.name
FROM Employees as e
LEFT JOIN EmployeeUNI as eu
ON eu.id = e.id;



End of Day 59
