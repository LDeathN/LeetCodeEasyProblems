#First Problem (2570)
class Solution(object):
    def mergeArrays(self, nums1, nums2):
        merged = []
        i, j = 0, 0
        
        while i < len(nums1) and j < len(nums2):
            if nums1[i][0] == nums2[j][0]:
                merged.append([nums1[i][0], nums1[i][1] + nums2[j][1]])
                i += 1
                j += 1
            elif nums1[i][0] < nums2[j][0]:
                merged.append(nums1[i])
                i += 1
            else:
                merged.append(nums2[j])
                j += 1

        while i < len(nums1):
            merged.append(nums1[i])
            i += 1
        
        while j < len(nums2):
            merged.append(nums2[j])
            j += 1
    
        return merged



#Second Problem (2574)
class Solution(object):
    def leftRightDifference(self, nums):
        left = []
        right = []
        result = []
        for i in range(len(nums)):
            left.append(sum(nums[:i]))
            right.append(sum(nums[i+1:]))
        while left and right:
            result.append(abs(left.pop(0) - right.pop(0)))
        
        return result



#Third Problem (2578)
class Solution(object):
    def splitNum(self, num):
        digits = sorted(str(num))
        num1, num2 = '', ''
        
        for i in range(len(digits)):
            if i % 2 == 0:
                num1 += digits[i]
            else:
                num2 += digits[i]
        
        return int(num1) + int(num2)



#Fourth Problem (2582)
class Solution(object):
    def passThePillow(self, n, time):
        cycle = 2 * (n - 1)
        effective_time = time % cycle

        if effective_time < n:
            return 1 + effective_time
        else:
            return n - (effective_time - (n - 1))



#Fifth Problem (2586)
class Solution(object):
    def vowelStrings(self, words, left, right):
        count = 0
        vowels = ["a", "o", "u", "e", "i"]
        for i in range(left, right + 1):
            if words[i][0] in vowels and words[i][len(words[i]) - 1] in vowels:
                count += 1
        
        return count


End of Day 111
