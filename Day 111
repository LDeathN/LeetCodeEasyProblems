#First Problem (2570)
class Solution(object):
    def mergeArrays(self, nums1, nums2):
        merged = []
        i, j = 0, 0
        
        while i < len(nums1) and j < len(nums2):
            if nums1[i][0] == nums2[j][0]:
                merged.append([nums1[i][0], nums1[i][1] + nums2[j][1]])
                i += 1
                j += 1
            elif nums1[i][0] < nums2[j][0]:
                merged.append(nums1[i])
                i += 1
            else:
                merged.append(nums2[j])
                j += 1

        while i < len(nums1):
            merged.append(nums1[i])
            i += 1
        
        while j < len(nums2):
            merged.append(nums2[j])
            j += 1
    
        return merged


#Second Problem (2574)
class Solution(object):
    def leftRightDifference(self, nums):
        left = []
        right = []
        result = []
        for i in range(len(nums)):
            left.append(sum(nums[:i]))
            right.append(sum(nums[i+1:]))
        while left and right:
            result.append(abs(left.pop(0) - right.pop(0)))
        
        return result






