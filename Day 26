#First Problem
class Solution(object):
    def reverseStr(self, s, k):
        s_list = list(s)

        for i in range(0, len(s), 2 * k):
            s_list[i:i + k] = reversed(s_list[i:i + k])

        return ''.join(s_list)



#Second Problem
class Solution(object):
    def diameterOfBinaryTree(self, root):
        res = [0]

        def dfs(root):
            if not root:
                return -1
            left = dfs(root.left)
            right = dfs(root.right)
            res[0] = max(res[0], 2 + left + right)

            return 1 + max(left, right)

        dfs(root)
        return res[0]



#Third Problem
class Solution(object):
    def checkRecord(self, s):
        if s.count("A") >= 2:
            return False        
        elif "LLL" in s:
            return False
        else:
            return True



#Fourth Problem
class Solution(object):
    def reverseWords(self, s):
        sentance = s.split(" ")

        for i in range(len(sentance)):
            sentance[i] = sentance[i][::-1]
        
        return " ".join(sentance)



#Fifth Problem
class Solution(object):
    def maxDepth(self, root):
        stack = []
        if root:
            stack.append((root,1))
        depth = 0

        while stack:
            (node,level) = stack.pop()
            depth = max(depth, level)
            for child in node.children:
                stack.append((child, level + 1))

        return depth



End of Day 26
