#First Problem
class Solution(object):
    def floodFill(self, image, sr, sc, color):
        def dfs(r, c):
            if r < 0 or r >= len(image) or c < 0 or c >= len(image[0]) or image[r][c] != original_color:
                return
            image[r][c] = color
            dfs(r + 1, c)
            dfs(r - 1, c)
            dfs(r, c + 1)
            dfs(r, c - 1)

        original_color = image[sr][sc]
        if original_color != color:
            dfs(sr, sc)
        return image



#Second Problem
class Solution(object):
    def nextGreatestLetter(self, letters, target):
        left, right = 0, len(letters)
        while left < right:
            mid = (left + right) // 2
            if letters[mid] <= target:
                left = mid + 1
            else:
                right = mid
        return letters[left % len(letters)] if left < len(letters) else letters[0]



