#First Problem
class Solution(object):
    def addDigits(self, num):
        num = str(num)
        while len(num) != 1:
            new = 0
            for i in num:
                new += int(i)
            num = str(new)
        return int(num)



#Second Problem
class Solution(object):
    def isUgly(self, n):
        while True and n > 1:
            if n % 2 == 0:
                n /= 2
            elif n % 3 == 0:
                n /= 3
            elif n % 5 == 0:
                n /= 5
            else:
                break
        if n == 1:
            return True
        return False



#Third Problem
class Solution(object):
    def missingNumber(self, nums):
        n = len(nums)
        for i in range(0, n + 1):
            if i not in nums:
                return i



#Fourth Problem
class Solution(object):
    def firstBadVersion(self, n):
        low = 1
        high = n
        while True:
            mid = (low + high)/2
            if isBadVersion(mid) and not isBadVersion(mid - 1):
                return mid
            elif isBadVersion(mid):
                high = mid - 1
            else:
                low = mid + 1



#Fifth Problem
class Solution(object):
    def moveZeroes(self, nums):
        count = 0
        for i in range(len(nums)):
            if nums[i - count] == 0:         
                nums.append(nums.pop(i - count))
                count += 1   
        return nums


End of Day 16
