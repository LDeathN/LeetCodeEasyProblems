#First Problem
class Solution(object):
    def allCellsDistOrder(self, rows, cols, rCenter, cCenter):
        cells = []

        for r in range(rows):
            for c in range(cols):
                dist = abs(r - rCenter) + abs(c - cCenter)
                cells.append((dist, r, c))

        cells.sort()

        result = [[r, c] for dist, r, c in cells]
        
        return result



@Second Problem
class Solution(object):
    def isBoomerang(self, points):
        (x1, y1), (x2, y2), (x3, y3) = points

        if (x1, y1) == (x2, y2) or (x2, y2) == (x3, y3) or (x1, y1) == (x3, y3):
            return False
            
        area = x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)

        return area != 0



#Third Problem
class Solution(object):
    def lastStoneWeight(self, stones):
        while len(stones) != 1:
            stones = sorted(stones)
            rock_one = stones.pop()
            rock_two = stones.pop()
            if rock_one > rock_two:
                rock_one -= rock_two
                stones.append(rock_one)
        
        return stones[0]




