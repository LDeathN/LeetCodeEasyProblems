#First Problem (236)
class Solution(object):
    def lowestCommonAncestor(self, root, p, q):
        if not root or root == p or root == q:
            return root

        left = self.lowestCommonAncestor(root.left, p, q)
        right = self.lowestCommonAncestor(root.right, p, q)
        
        if left and right:
            return root

        return left if left else right



#Second Problem (237)
class Solution(object):
    def deleteNode(self, node):
        node.val = node.next.val
        node.next = node.next.next



#Third Problem (238)
class Solution(object):
    def productExceptSelf(self, nums):
        n = len(nums)

        answer = [1] * n
        
        prefix = 1
        for i in range(n):
            answer[i] = prefix
            prefix *= nums[i] 
        
        suffix = 1
        for i in range(n-1, -1, -1):
            answer[i] *= suffix
            suffix *= nums[i] 
        
        return answer




