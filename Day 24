#First Problem
class Solution(object):
    def findWords(self, words):
        keyboard = ["qwertyuiop", "asdfghjkl", "zxcvbnm"]
        result = []
        for word in words:
            current = []
            for letter in word:
                if letter.lower() in keyboard[0]:
                    current.append(0)
                elif letter.lower() in keyboard[1]:
                    current.append(1)
                else:
                    current.append(2)
            if len(set(current)) == 1:
                result.append(word)
        
        return result



#Second Problem
class Solution(object):
    def findMode(self, root):
        if not root:
            return []

        if not root.left and not root.right:
            return [root.val]
        
        def checkDups(root):
            if root.val not in count:
                count[root.val] = 1
            else:
                count[root.val] += 1
            if not root.left and not root.right:
                return
            if root.left:
                checkDups(root.left)
            if root.right:
                checkDups(root.right)
        count = {}
        checkDups(root)
        result = []
        maximum_count = max(count.values())
        for key, value in count.items():
            if value == maximum_count:
                result.append(key)
        return result



#Third Problem
class Solution(object):
    def findRelativeRanks(self, score):
        reverse = sorted(score, key=lambda x: -x)
        
        for i in range(len(reverse)):
            found = score.index(reverse[i])
            if i == 0:
                score[found] = "Gold Medal"
            elif i == 1:
                score[found] = "Silver Medal"
            elif i == 2:
                score[found] = "Bronze Medal"
            else:
                score[found] = str(i + 1)
        
        return score




