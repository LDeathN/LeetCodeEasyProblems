#First Problem
class Solution(object):
    def validMountainArray(self, arr):
        n = len(arr)
    
        if n < 3:
            return False

        i = 1
        while i < n and arr[i] > arr[i - 1]:
            i += 1

        if i == 1 or i == n:
            return False
        while i < n and arr[i] < arr[i - 1]:
            i += 1

        return i == n



#Second Problem
class Solution(object):
    def diStringMatch(self, s):
        n = len(s)
        low, high = 0, n
        perm = []

        for char in s:
            if char == 'I':
                perm.append(low)
                low += 1
            else: 
                perm.append(high)
                high -= 1

        perm.append(low)

        return perm



#Third Problem
class Solution(object):
    def minDeletionSize(self, strs):
        num_cols = len(strs[0])
        num_rows = len(strs)
        unsorted_cols = 0
        
        for col in range(num_cols):
            for row in range(1, num_rows):
                if strs[row][col] < strs[row - 1][col]:
                    unsorted_cols += 1
                    break

        return unsorted_cols




