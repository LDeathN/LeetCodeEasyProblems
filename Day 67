#First Problem
class Solution(object):
    def findKthPositive(self, arr, k):
        missing_count = 0
        current_number = 1
        arr_idx = 0
        
        while missing_count < k:
            if arr_idx < len(arr) and arr[arr_idx] == current_number:
                arr_idx += 1
            else:
                missing_count += 1
                if missing_count == k:
                    return current_number
            current_number += 1



#Second Problem
class Solution(object):
    def makeGood(self, s):
        stack = []
        for char in s:
            if stack and (stack[-1].lower() == char.lower()) and (stack[-1] != char):
                stack.pop()
            else:
                stack.append(char)
        
        return ''.join(stack)



#Third Problem
class Solution(object):
    def threeConsecutiveOdds(self, arr):
        count = 0
        for el in arr:
            if el % 2 != 0:
                count += 1
            else:
                count = 0
            if count == 3:
                return True
        return False



#Fourth Problem
class Solution(object):
    def thousandSeparator(self, n):
        s = str(n)

        s = s[::-1]

        parts = []

        for i in range(0, len(s), 3):
            parts.append(s[i:i+3])

        return '.'.join(parts)[::-1]




