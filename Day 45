#First Problem
class Solution(object):
    def isUnivalTree(self, root):
        if not root:
            return True
        
        def dfs(node, value):
            if not node:
                return True
            if node.val != value:
                return False
            return dfs(node.left, value) and dfs(node.right, value)
        
        return dfs(root, root.val)



#Second Problem
class Solution(object):
    def largestPerimeter(self, nums):
        nums.sort(reverse=True)

        for i in range(len(nums) - 2):
            if nums[i] < nums[i + 1] + nums[i + 2]:
                return nums[i] + nums[i + 1] + nums[i + 2]
                
        return 0




