#First Problem (2549)
class Solution(object):
    def distinctIntegers(self, n):
        if n == 1:
            return 1
        return n - 1



#Second Problem (2553)
class Solution(object):
    def separateDigits(self, nums):
        digits = []
        for num in nums:
            for digit in str(num):
                digits.append(int(digit))
        
        return digits



#Third Problem (2558)
class Solution(object):
    def pickGifts(self, gifts, k):
        gifts = [-g for g in gifts]
        heapq.heapify(gifts) 
        
        for _ in range(k):
            max_gifts = -heapq.heappop(gifts)
            new_gifts = math.floor(math.sqrt(max_gifts))
            heapq.heappush(gifts, -new_gifts)

        return int(-sum(gifts))



#Fourth Problem (2562)
class Solution(object):
    def findTheArrayConcVal(self, nums):
        total = 0
        while nums:
            if len(nums) >= 2:
                number = str(nums.pop(0)) + str(nums.pop())
            else:
                number = str(nums.pop())
            total += int(number)
        
        return total



#Fifth Problem (2566)
class Solution(object):
    def minMaxDifference(self, num):
        num_str = str(num)

        max_num = num_str
        for digit in num_str:
            if digit != '9':
                max_num = num_str.replace(digit, '9')
                break

        min_num = num_str
        for digit in num_str:
            if digit != '0': 
                min_num = num_str.replace(digit, '0')
                break

        max_num = int(max_num)
        min_num = int(min_num)

        return max_num - min_num


End of Day 110
