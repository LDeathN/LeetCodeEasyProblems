#First Problem
class Solution(object):
    def mergeTwoLists(self, list1, list2):
        new_list = ListNode(0)
        cur = new_list
        while list1 and list2:
            if list1.val <= list2.val:
                cur.next = list1
                list1 = list1.next
            else:
                cur.next = list2
                list2 = list2.next
            cur = cur.next
        cur.next = list1 or list2
        return new_list.next


#Second Problem
class Solution(object):
    def removeDuplicates(self, nums):
        length = len(nums)
        unique = []
        k = 0
        for i in range(len(nums)):
            if nums[i - k] not in unique:
                unique.append(nums[i - k])
            else:
                nums.pop(i - k)
                k += 1
        return len(unique)


#Third Problem
class Solution(object):
    def removeElement(self, nums, val):
        k = 0
        for i in range(len(nums)):
            if nums[i - k] == val:
                nums.pop(i - k)
                k += 1
        return len(nums)


#Fourth Problem
class Solution(object):
    def strStr(self, haystack, needle):
        if haystack == needle:
            return 0
        k = len(needle)
        for i in range(len(haystack)):
            if i - 2 == len(haystack) - k:
                break
            if haystack[i:i+k] == needle:
                return i
        return -1


