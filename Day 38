#First Problem
class Solution(object):
    def uniqueMorseRepresentations(self, words):
        unique = []
        morse_code = {
            "a": ".-",
            "b": "-...",
            "c": "-.-.",
            "d": "-..",
            "e": ".",
            "f": "..-.",
            "g": "--.",
            "h": "....",
            "i": "..",
            "j": ".---",
            "k": '-.-',
            "l": ".-..",
            "m": "--",
            "n": "-.",
            "o": "---",
            "p": ".--.",
            "q": "--.-",
            "r": ".-.",
            "s": "...",
            "t": "-",
            "u": "..-",
            "v": "...-",
            "w": ".--",
            "x": "-..-",
            "y": "-.--",
            "z": "--..",
            }

        for word in words:
            current =  ""
            for letter in word:
                current += morse_code[letter]
            if current not in unique:
                unique.append(current)
                
        unique = set(unique)

        return len(unique)



#Second Problem
class Solution(object):
    def numberOfLines(self, widths, s):
        lines = 1 
        current_width = 0
        
        for char in s:
            width = widths[ord(char) - ord('a')]
            if current_width + width > 100:
                lines += 1
                current_width = width
            else:
                current_width += width
        
        return [lines, current_width]




