#First Problem (3264)
class Solution(object):
    def getFinalState(self, nums, k, multiplier):
        for _ in range(k):
            min_val = min(nums)
            min_index = nums.index(min_val)

            nums[min_index] *= multiplier
        
        return nums



#Second Problem (3270)
class Solution(object):
    def generateKey(self, num1, num2, num3):
        str1 = str(num1).zfill(4)
        str2 = str(num2).zfill(4)
        str3 = str(num3).zfill(4)

        key_digits = []

        for i in range(4):
            min_digit = min(str1[i], str2[i], str3[i])
            key_digits.append(min_digit)

        key = int(''.join(key_digits))
        
        return key



#Third Problem (3274)
class Solution(object):
    def checkTwoChessboards(self, coordinate1, coordinate2):
        def is_black(coordinate):
            column = coordinate[0]
            row = coordinate[1]

            column_index = ord(column) - ord('a') + 1
            row_index = int(row)

            return (column_index + row_index) % 2 == 0

        return is_black(coordinate1) == is_black(coordinate2)




