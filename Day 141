#First Problem (17)
class Solution(object):
    def letterCombinations(self, digits):
        phone = {
            "2": "abc", "3": "def", "4": "ghi", "5": "jkl",
            "6": "mno", "7": "pqrs", "8": "tuv", "9": "wxyz"
        }

        if not digits:
            return []

        result = []

        def backtrack(index, current_combination):
            if len(current_combination) == len(digits):
                result.append(current_combination)
                return

            current_digit = digits[index]

            for letter in phone[current_digit]:
                backtrack(index + 1, current_combination + letter)

        backtrack(0, "")
        
        return result




