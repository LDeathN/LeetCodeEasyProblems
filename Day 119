#First Problem (2716)
class Solution(object):
    def minimizedStringLength(self, s):
        return len(set(s))



#Second Problem (2717)
class Solution(object):
    def semiOrderedPermutation(self, nums):
        n = len(nums)
        pos1 = nums.index(1)
        posN = nums.index(n)

        if pos1 < posN:
            return pos1 + (n - 1 - posN)
        else:
            return pos1 + (n - 1 - posN) - 1



#Third Problem (2723)
/**
 * @param {Promise} promise1
 * @param {Promise} promise2
 * @return {Promise}
 */
var addTwoPromises = async function(promise1, promise2) {
    return Promise.all([promise1, promise2])
    .then(([result1, result2]) => result1 + result2);
};



#Fourth Problem (2724)
/**
 * @param {Array} arr
 * @param {Function} fn
 * @return {Array}
 */
var sortBy = function(arr, fn) {
    return arr.sort((a, b) => fn(a) - fn(b));
};



#Fifth Problem (2725)
/**
 * @param {Function} fn
 * @param {Array} args
 * @param {number} t
 * @return {Function}
 */
var cancellable = function(fn, args, t) {
   fn(...args);

  const intervalId = setInterval(() => {
    fn(...args);
  }, t);

  return () => {
    clearInterval(intervalId);
  }; 
};


End of Day 119
