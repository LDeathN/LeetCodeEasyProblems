#First Problem (2475)
class Solution(object):
    def unequalTriplets(self, nums):
        n = len(nums)
        count = 0
        
        for i in range(n - 2):
            for j in range(i + 1, n - 1):
                for k in range(j + 1, n):
                    if nums[i] != nums[j] and nums[i] != nums[k] and nums[j] != nums[k]:
                        count += 1
        
        return count



#Second Problem (2481)
class Solution(object):
    def numberOfCuts(self, n):
        if n == 1:
            return 0
        elif n % 2 == 0:
            return n // 2
        else:
            return n



#Third Problem (2485)
class Solution(object):
    def pivotInteger(self, n):
        nums = [el for el in range(1, n + 1)]
        for i in range(len(nums)):
            if sum(nums[:i + 1]) == sum(nums[i:]):
                return nums[i]
        
        return -1



#Fourth Problem (2490)
class Solution(object):
    def isCircularSentence(self, sentence):
        sentence = sentence.split(' ')
        if sentence[0][0] != sentence[len(sentence) - 1][len(sentence[len(sentence) - 1]) - 1]:
            return False
            
        if len(sentence) == 1:
            if sentence[0][0] != sentence[0][len(sentence[0]) - 1]:
                return False
            return True

        for i in range(len(sentence) - 1):
            if sentence[i][len(sentence[i]) - 1] == sentence[i + 1][0]:
                continue
            else:
                return False
        
        return True




