#First Problem
class Solution(object):
    def canBeIncreasing(self, nums):
        found_violation = False

        for i in range(1, len(nums)):
            if nums[i-1] >= nums[i]:
                if found_violation:
                    return False
                found_violation = True

                if i == 1 or nums[i-2] < nums[i]:
                    continue

                if i + 1 == len(nums) or nums[i-1] < nums[i+1]:
                    continue
                    
                return False

        return True



#Second Problem
class Solution(object):
    def maxProductDifference(self, nums):
        nums = sorted(nums)
        n1, n2 = nums.pop(), nums.pop()
        k1, k2 = nums.pop(0), nums.pop(0)
        return n1 * n2 - k1 * k2




