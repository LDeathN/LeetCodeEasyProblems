#First Problem (148)
class Solution(object):
    def sortList(self, head):
        if not head or not head.next:
            return head

        mid = self.getMid(head)
        
        left = self.sortList(head)
        right = self.sortList(mid)

        return self.merge(left, right)
    
    def getMid(self, head):
        slow, fast = head, head
        prev = None
        while fast and fast.next:
            prev = slow
            slow = slow.next
            fast = fast.next.next
        if prev:
            prev.next = None
        return slow
        
    def merge(self, l1, l2):
        dummy = ListNode()
        tail = dummy

        while l1 and l2:
            if l1.val < l2.val:
                tail.next = l1
                l1 = l1.next
            else:
                tail.next = l2
                l2 = l2.next
            tail = tail.next

        if l1:
            tail.next = l1
        if l2:
            tail.next = l2
            
        return dummy.next



#Second Problem (151)
class Solution(object):
    def reverseWords(self, s):
        words = s.split()

        words.reverse()
        
        return ' '.join(words)



#Third Problem (152)
class Solution(object):
    def maxProduct(self, nums):
        result = max_product = min_product = nums[0]

        for i in range(1, len(nums)):
            if nums[i] < 0:
                max_product, min_product = min_product, max_product

            max_product = max(nums[i], max_product * nums[i])
            min_product = min(nums[i], min_product * nums[i])
            
            result = max(result, max_product)
        
        return result




