#First Problem
class Solution(object):
    def minimumMoves(self, s):
        moves = 0
        i = 0
        while i < len(s):
            if s[i] == 'X':
                moves += 1
                i += 3 
            else:
                i += 1  
        return moves



#Second Problem
class Solution(object):
    def twoOutOfThree(self, nums1, nums2, nums3):
        result = []
        for num1 in nums1:
            for num2 in nums2:
                for num3 in nums3:
                    if num1 == num2 and num1 not in result:
                        result.append(num1)
                    elif num1 == num3 and num1 not in result:
                        result.append(num1)
                    elif num2 == num3 and num2 not in result:
                        result.append(num2)
                        
        return result



#Third Problem
class Solution(object):
    def minMovesToSeat(self, seats, students):
        result = 0
        seats = sorted(seats)
        students = sorted(students)
        while seats or students:
            seat = seats.pop()
            student = students.pop()
            result += abs(seat - student)
        
        return result



#Fourth Problem
class Solution(object):
    def areNumbersAscending(self, s):
        numbers = []
        s = s.split(' ')
        for el in s:
            if el.isdigit():
                if numbers:
                    if int(el) <= numbers[len(numbers) - 1]:
                        return False
                numbers.append(int(el))
            
        return True



#Fifth Problem
class Solution(object):
    import string
    def countValidWords(self, sentence):
        def is_valid_word(word):
            if any(char.isdigit() for char in word):
                return False

            hyphen_count = word.count('-')
            if hyphen_count > 1:
                return False
            if hyphen_count == 1:
                hyphen_index = word.index('-')
                if hyphen_index == 0 or hyphen_index == len(word) - 1:
                    return False
                if not (word[hyphen_index - 1].islower() and word[hyphen_index + 1].islower()):
                    return False

            punctuations = set('!.,')
            if any(char in punctuations for char in word[:-1]):
                return False
            if word[-1] in punctuations and len(word) > 1 and word[-2] in punctuations:
                return False
            
            return True
        
        tokens = sentence.split()
        valid_word_count = 0
        
        for token in tokens:
            if is_valid_word(token):
                valid_word_count += 1
                
        return valid_word_count

End of Day 89
