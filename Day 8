#First Problem
class Solution(object):
    def hasCycle(self, head):
        slow, fast = head, head

        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next

            if slow == fast:
                return True
        
        return False



#Second Problem
class Solution(object):
    def preorderTraversal(self, root):
        cur, stack = root, []
        res = []

        while cur or stack:
            if cur:
                res.append(cur.val)
                stack.append(cur.right)
                cur = cur.left
            else:
                cur = stack.pop()
        return res



