#First Problem
class Solution(object):
    def repeatedCharacter(self, s):
        count = {}
        for letter in s:
            if letter not in count:
                count[letter] = 0
            count[letter] += 1
            if count[letter] == 2:
                return letter



#Second Problem
SELECT teacher_id, COUNT(DISTINCT(subject_id)) as "cnt"
FROM Teacher
GROUP BY teacher_id;



#Third Problem
class Solution(object):
    def minimumOperations(self, nums):
        unique_non_zero_elements = set()
    
        for num in nums:
            if num > 0:
                unique_non_zero_elements.add(num)
        
        return len(unique_non_zero_elements)



#Fourth Problem
class Solution(object):
    def mergeSimilarItems(self, items1, items2):
        weight_map = {}

        for value, weight in items1:
            if value in weight_map:
                weight_map[value] += weight
            else:
                weight_map[value] = weight

        for value, weight in items2:
            if value in weight_map:
                weight_map[value] += weight
            else:
                weight_map[value] = weight

        result = [[value, weight] for value, weight in sorted(weight_map.items())]

        return result




