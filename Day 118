#First Problem (2703)
var argumentsLength = function(...args) {
    return args.length;
};



#Second Problem (2704)
var expect = function(val) {
    return {
        toBe: function(expected) {
            if (val === expected) {
                return true;
            } else {
                throw new Error("Not Equal");
            }
        },
        notToBe: function(expected) {
            if (val !== expected) {
                return true;
            } else {
                throw new Error("Equal");
            }
        }
    };
};



#Third Problem (2706)
class Solution(object):
    def buyChoco(self, prices, money):
        prices.sort()

        if prices[0] + prices[1] <= money:
            return money - (prices[0] + prices[1])

        return money



#Fourth Problem (2710)
class Solution(object):
    def removeTrailingZeros(self, num):
        num = [n for n in num]
        while True:
            n = num.pop()
            if n != "0":
                num.append(n)
                break
        return "".join(num)



#Fifth Problem (2715)
var cancellable = function(fn, args, t) {
    const timeoutId = setTimeout(() => {
        fn(...args);
    }, t);

    return function cancelFn() {
        clearTimeout(timeoutId);
    };
    };


End of Day 118
