#First Problem (3083)
class Solution(object):
    def isSubstringPresent(self, s):
        reversed_s = s[::-1]

        for i in range(len(s) - 1):
            substring = s[i:i+2]
            if substring in reversed_s:
                return True
        
        return False



#Second Problem (3090)
class Solution(object):
    def maximumLengthSubstring(self, s):
        left = 0
        char_count = {}
        max_length = 0  

        for right in range(len(s)):
            char_count[s[right]] = char_count.get(s[right], 0) + 1

            while char_count[s[right]] > 2:
                char_count[s[left]] -= 1
                if char_count[s[left]] == 0:
                    del char_count[s[left]] 
                left += 1  

            current_length = right - left + 1
            max_length = max(max_length, current_length)

        return max_length




