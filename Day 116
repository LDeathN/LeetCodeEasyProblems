#First Problem (2665)
var createCounter = function(init) {
    let currentValue = init;

    return {
        increment: () => ++currentValue,
        decrement: () => --currentValue,
        reset: () => (currentValue = init)
    };
};



#Second Problem (2666)
var once = function(fn) {
    let called = false;
    let result;
    return function(...args){
        if (!called) {
            called = true;
            result = fn(...args);
            return result;
        }
        return undefined;
    }
};



#Third Problem (2667)
var createHelloWorld = function() {
    
    return function(...args) {
        return "Hello World";
    }
};



#Fourth Problem (2670)
class Solution(object):
    def distinctDifferenceArray(self, nums):
        n = len(nums)
        suffixSet = set()
        suffixCount = [0] * n

        for i in range(n - 1, -1, -1):
            suffixSet.add(nums[i])
            suffixCount[i] = len(suffixSet)

        prefixSet = set()
        result = []

        for i in range(n):
            prefixSet.add(nums[i])
            if i < n - 1:
                result.append(len(prefixSet) - suffixCount[i + 1])
            else:
                result.append(len(prefixSet))  

        return result



#Fifth Problem (2677)
var chunk = function(arr, size) {
    const chunked = [];
    for (let i = 0; i < arr.length; i += size) {
        chunked.push(arr.slice(i, i + size));
    }
    return chunked;
};


End of Day 116
