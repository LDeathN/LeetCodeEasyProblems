#First Problem
class Solution(object):
    def findLengthOfLCIS(self, nums):
        if not nums:
            return 0
        
        max_length = 1
        current_length = 1
        
        for i in range(1, len(nums)):
            if nums[i] > nums[i - 1]:
                current_length += 1
            else:
                max_length = max(max_length, current_length)
                current_length = 1
        
        max_length = max(max_length, current_length)
        return max_length



#Second Problem
class Solution(object):
    def validPalindrome(self, s):
        def is_palindrome(sub):
            return sub == sub[::-1]
        
        left, right = 0, len(s) - 1
        
        while left < right:
            if s[left] != s[right]:
                skip_left = s[left + 1:right + 1]
                skip_right = s[left:right]
                return is_palindrome(skip_left) or is_palindrome(skip_right)
            left += 1
            right -= 1
        
        return True




