#First Problem
class Solution(object):
    def getIntersectionNode(self, headA, headB):
        l1, l2 = headA, headB

        while l1 != l2:
            l1 = l1.next if l1 else headB
            l2 = l2.next if l2 else headA
        
        return l1



#Second Problem
class Solution(object):
    def convertToTitle(self, columnNumber):
        res = ""
        while columnNumber > 0:
            offset = (columnNumber - 1) % 26
            res += chr(ord("A") + offset)
            columnNumber = (columnNumber - 1) // 26

        return res[::-1]



class Solution(object):
    def majorityElement(self, nums):
        dictionary = {}
        
        for num in nums:
            if num not in dictionary:
                dictionary[num] = 0
            dictionary[num] += 1
        
        for num, value in dictionary.items():
            if value > len(nums) / 2:
                return num


End of Day 9
