#First Problem
class Solution(object):
    def sumBase(self, n, k):
        digits = []
        while n > 0:
            digits.append(n % k)
            n //= k

        return sum(digits)



#Second Problem
class Solution(object):
    def replaceDigits(self, s):
        for i in range(len(s)):
            if s[i].isdigit():
                s = s.replace(s[i], chr(ord(s[i - 1]) + int(s[i])), 1)
        
        return s



#Third Problem
class Solution(object):
    def getMinDistance(self, nums, target, start):
        values = []
        for i in range(len(nums)):
            if nums[i] == target:
                values.append(abs(i - start))
        
        return min(values)




