#First Problem
class Solution(object):
    def arrayPairSum(self, nums):
        nums = sorted(nums)
        total = 0

        for i in range(0, len(nums), 2):
            total += min(nums[i], nums[i + 1])
        
        return total



#Second Problem
class Solution(object):
    def findTilt(self, root):
        def postorder(node):
            if not node:
                return 0, 0 

            left_sum, left_tilt = postorder(node.left)
            right_sum, right_tilt = postorder(node.right)

            current_tilt = abs(left_sum - right_sum)

            total_tilt = left_tilt + right_tilt + current_tilt

            return left_sum + right_sum + node.val, total_tilt

        _, total_tilt = postorder(root)
        return total_tilt



#Third Problem
class Solution(object):
    def matrixReshape(self, mat, r, c):
        if len(mat) * len(mat[0]) != r * c:
            return mat
        
        result = []
        numbers = []
        for i in range(len(mat)):
            for j in range(len(mat[0])):
                numbers.append(mat[i][j])

        for i in range(r):
            current = []
            for j in range(c):
                current.append(numbers.pop(0))
            result.append(current)
            
        return result




