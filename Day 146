#First Problem (59)
class Solution(object):
    def generateMatrix(self, n):
        matrix = [[0] * n for _ in range(n)]

        top, bottom = 0, n - 1
        left, right = 0, n - 1
        num = 1 
        
        while top <= bottom and left <= right:
            for i in range(left, right + 1):
                matrix[top][i] = num
                num += 1
            top += 1

            for i in range(top, bottom + 1):
                matrix[i][right] = num
                num += 1
            right -= 1

            if top <= bottom:
                for i in range(right, left - 1, -1):
                    matrix[bottom][i] = num
                    num += 1
                bottom -= 1

            if left <= right:
                for i in range(bottom, top - 1, -1):
                    matrix[i][left] = num
                    num += 1
                left += 1
        
        return matrix



#Second Problem (61)
class Solution(object):
    def rotateRight(self, head, k):
        if not head or not head.next or k == 0:
            return head

        length = 1
        current = head
        while current.next:
            current = current.next
            length += 1

        last_node = current

        k = k % length
        if k == 0:
            return head 

        last_node.next = head

        new_tail_position = length - k - 1
        new_tail = head
        for _ in range(new_tail_position):
            new_tail = new_tail.next

        new_head = new_tail.next

        new_tail.next = None
        
        return new_head




