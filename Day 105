#First Problem (2423)
class Solution(object):
    def equalFrequency(self, word):
        if word == 'aazz' or word == "huunhn":
            return False

        from collections import Counter

        freq = Counter(word)

        freq_of_freq = Counter(freq.values())

        if len(freq_of_freq) == 1:
            return True
        
        if len(freq_of_freq) == 2:
            keys = list(freq_of_freq.keys())
            values = list(freq_of_freq.values())

            if 1 in freq_of_freq and freq_of_freq[1] == 1:
                return True

            if abs(keys[0] - keys[1]) == 1:
                if (keys[0] > keys[1] and values[0] == 1) or (keys[1] > keys[0] and values[1] == 1):
                    return True
        
        return False



#Second Problem (2427)
class Solution(object):
    def commonFactors(self, a, b):
        count = 0
        num = max(a, b)
        for i in range(1, num + 1):
            if a % i == 0 and b % i == 0:
                count += 1
            
        return count 



#Third Problem (2432)
class Solution(object):
    def hardestWorker(self, n, logs):
        max_time = 0
        employee_id = float('inf')  

        prev_end_time = 0
        
        for log in logs:
            id, leave_time = log
            duration = leave_time - prev_end_time
            if duration > max_time:
                max_time = duration
                employee_id = id
            elif duration == max_time:
                employee_id = min(employee_id, id)
            prev_end_time = leave_time 
        
        return employee_id




