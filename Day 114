#First Problem (2634)
var filter = function(arr, fn) {
    const filteredArr = [];

    for (let i = 0; i < arr.length; i++) {
        if (fn(arr[i], i)) {
            filteredArr.push(arr[i]);
        }
    }
    
    return filteredArr;
};



#Second Problem (2635)
var map = function(arr, fn) {
    const result = [];

    for (let i = 0; i < arr.length; i++) {
        result.push(fn(arr[i], i));
    }
    
    return result;
};



#Third Problem (2639)
class Solution(object):
    def findColumnWidth(self, grid):
        m, n = len(grid), len(grid[0])

        widths = [0] * n

        for col in range(n):
            max_width = 0

            for row in range(m):
                length = len(str(grid[row][col]))
                max_width = max(max_width, length)

            widths[col] = max_width
        
        return widths



#Fourth Problem (2643)
class Solution(object):
    def rowAndMaximumOnes(self, mat):
        max_ones = 0
        row_index = 0
        
        for i, row in enumerate(mat):
            count_ones = sum(row)
            if count_ones > max_ones:
                max_ones = count_ones
                row_index = i
            elif count_ones == max_ones and i < row_index:
                row_index = i
        
        return [row_index, max_ones]




