#First Problem
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def deleteDuplicates(self, head):
        cur = head

        while cur:
            while cur.next and cur.next.val == cur.val:
                cur.next = cur.next.next
            cur = cur.next
        
        return head


#Second Problem
class Solution(object):
    def merge(self, nums1, m, nums2, n):
        for e in range(n):
            nums1.pop()

        for i in range(n, 0, -1):
            if nums1:
                for j in range(len(nums1)):
                    if nums1[j] >= nums2[n - i]:
                        nums1.insert(j, nums2[n - i])
                        break
                    if j == len(nums1) - 1:
                        nums1.append(nums2[n - i])
            else:
                nums1.append(nums2[n - i])


