#First Problem
class Solution(object):
    def isHappy(self, n):
        def get_next(num):
            total_sum = 0
            while num > 0:
                num, digit = divmod(num, 10)
                total_sum += digit ** 2
            return total_sum

        seen = set()
        while n != 1 and n not in seen:
            seen.add(n)
            n = get_next(n)

        return n == 1



#Second Problem
class Solution(object):
    def removeElements(self, head, val):
        if not head:
            return None
    
        
        dummy = ListNode(0)
        dummy.next = head
        prev, current = dummy, head
        
        while current:
            if current.val == val:
                prev.next = current.next
            else:
                prev = current
            current = current.next
        
        return dummy.next



#Third Problem
class Solution(object):
    def reverseList(self, head):
        prev = None
        current = head
    
        while current:
            next_node = current.next
            current.next = prev
            prev = current
            current = next_node
        
        return prev



#Fourth Problem
class Solution(object):
    def containsDuplicate(self, nums):
        dictionary = {}
        for num in nums:
            if num not in dictionary:
                dictionary[num] = 0
            dictionary[num] += 1

        for value in dictionary.values():
            if value > 1:
                return True
                
        return False



#Fifth Problem
class Solution(object):
    def isIsomorphic(self, s, t):
        if len(s) != len(t):
            return False
    
        s_to_t = {}
        t_to_s = {}
        
        for char_s, char_t in zip(s, t):
            if char_s in s_to_t:
                if s_to_t[char_s] != char_t:
                    return False
            else:
                s_to_t[char_s] = char_t
            
            if char_t in t_to_s:
                if t_to_s[char_t] != char_s:
                    return False
            else:
                t_to_s[char_t] = char_s
        
        return True


End of Day 13
