#First Problem
class Solution(object):
    def totalMoney(self, n):
        total = 0
        count = 0
        for i in range(1, n + 1):
            total += i - count
            if i % 7 == 0:
                count += 6
        
        return total



#Second Problem
class Solution(object):
    def decode(self, encoded, first):
        n = len(encoded) + 1
        arr = [0] * n
        arr[0] = first
        
        for i in range(1, n):
            arr[i] = encoded[i - 1] ^ arr[i - 1]
        
        return arr



#Third Problem
class Solution(object):
    def countGoodRectangles(self, rectangles):
        maxLen = 0
        for length, width in rectangles:
            maxLen = max(maxLen, min(length, width))
        
        count = 0
        for length, width in rectangles:
            if min(length, width) == maxLen:
                count += 1
        
        return count



#Fourth Problem
SELECT user_id, COUNT(follower_id) as followers_count
FROM Followers
GROUP BY user_id
ORDER BY user_id;



#Fifth Problem
WITH Reports AS (
    SELECT
        reports_to AS manager_id,
        COUNT(*) AS reports_count,
        ROUND(AVG(age), 0) AS average_age
    FROM Employees
    WHERE reports_to IS NOT NULL
    GROUP BY reports_to
)
SELECT
    e.employee_id,
    e.name,
    r.reports_count,
    r.average_age
FROM
    Employees e
JOIN
    Reports r ON e.employee_id = r.manager_id
ORDER BY
    e.employee_id;


End of Day 75
