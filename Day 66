#First Problem
class Solution(object):
    def numWaterBottles(self, numBottles, numExchange):
        total_drunk = numBottles  
        empty_bottles = numBottles 
        
        while empty_bottles >= numExchange:
            new_full_bottles = empty_bottles // numExchange
            empty_bottles = empty_bottles % numExchange + new_full_bottles
            total_drunk += new_full_bottles
        
        return total_drunk



#Second Problem
class Solution(object):
    def countOdds(self, low, high):
        if low % 2 == 0 and high % 2 == 0:
            return (high - low) // 2
        elif low % 2 != 0 and high % 2 != 0:
            return (high - low + 2) // 2
        else:
            return (high - low + 1) // 2



#Third Problem
SELECT patient_id, patient_name, conditions
FROM Patients
WHERE conditions LIKE '%DIAB1%';



#Fourth Problem
class Solution(object):
    def restoreString(self, s, indices):
        result = [""] * len(s)
        
        for i in range(len(s)):
            result[indices[i]] = s[i]

        return "".join(result)



#Fifth Problem
class Solution(object):
    def countGoodTriplets(self, arr, a, b, c):
        count = 0
        n = len(arr)

        for i in range(n - 2):
            for j in range(i + 1, n - 1):
                for k in range(j + 1, n):
                    if abs(arr[i] - arr[j]) <= a and abs(arr[j] - arr[k]) <= b and abs(arr[i] - arr[k]) <= c:
                        count += 1
                        
        return count


End of Day 66
