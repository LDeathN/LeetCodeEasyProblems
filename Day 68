#First Problem
class Solution(object):
    def containsPattern(self, arr, m, k):
        n = len(arr)

        for i in range(n - m * k + 1):
            pattern_found = True
            for j in range(1, k):
                for l in range(m):
                    if arr[i + l] != arr[i + j * m + l]:
                        pattern_found = False
                        break
                if not pattern_found:
                    break
            if pattern_found:
                return True
        
        return False



#Second Problem
class Solution(object):
    def diagonalSum(self, mat):
        total = 0
        for i in range(len(mat)):
            total += mat[i][i]
            total += mat[i][len(mat)-1-i]
        if len(mat) % 2 != 0:
            total -= mat[len(mat) // 2][len(mat) // 2]

        return total




