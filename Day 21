#First Problem
class Solution(object):
    def addStrings(self, num1, num2):
        num1 = int(num1)
        num2 = int(num2)
        result = num1 + num2
        return str(result)



#Second Problem
class Solution(object):
    def thirdMax(self, nums):
        unique = []

        for num in nums:
            if num not in unique:
                unique.append(num)

        unique = sorted(unique)
        if len(unique) < 3:
            return unique[len(unique) - 1]
        else:
            return unique[-3] 



#Third Problem
class Solution(object):
    def countSegments(self, s): 
        count = 0
        prev_char = ' ' 
        
        for char in s:
            if char != ' ' and prev_char == ' ':
                count += 1
            prev_char = char
        
        return count



#Fourth Problem
class Solution(object):
    def arrangeCoins(self, n):
        left, right = 0, n
    
        while left <= right:
            mid = left + (right - left) // 2
            coins_needed = mid * (mid + 1) // 2
            
            if coins_needed == n:
                return mid
            elif coins_needed < n:
                left = mid + 1
            else:
                right = mid - 1
        
        return right



#Fifth Problem
class Solution(object):
    def findDisappearedNumbers(self, nums):
        marked = set(nums)
        result = []
        
        for i in range(1, len(nums) + 1):
            if i not in marked:
                result.append(i)
        
        return result

End of Day 21
