#First Problem (3110)
class Solution(object):
    def scoreOfString(self, s):
        score = 0

        for i in range(1, len(s)):
            score += abs(ord(s[i]) - ord(s[i - 1]))
        
        return score



#Second Problem (3114)
class Solution(object):
    def findLatestTime(self, s):
        if s[0] == '?':
            if s[1] == '?' or s[1] < '2':
                s = '1' + s[1:]
            else:
                s = '0' + s[1:]
        
        if s[1] == '?':
            if s[0] == '1':
                s = s[0] + '1' + s[2:]
            else:
                s = s[0] + '9' + s[2:]

        if s[3] == '?':
            s = s[:3] + '5' + s[4:]
        
        if s[4] == '?':
            s = s[:4] + '9'
        
        return s



#Third Problem (3120)
class Solution(object):
    def numberOfSpecialChars(self, word):
        result = []
        for letter in word:
            if letter.lower() in word and letter.upper() in word:
                if letter.upper() not in result:
                    result.append(letter.upper())
        return len(result)



#Fourth Problem (3127)
class Solution(object):
    def canMakeSquare(self, grid):
        def check_subgrid(i, j):
            cells = [grid[i][j], grid[i][j+1], grid[i+1][j], grid[i+1][j+1]]
            countB = cells.count('B')
            countW = cells.count('W')
            return countB == 4 or countW == 4 or countB == 3 or countW == 3

        for i in range(2):
            for j in range(2):
                if check_subgrid(i, j):
                    return True

        return False



#Fifth Problem (3131)
class Solution(object):
    def addedInteger(self, nums1, nums2):
        return max(nums2) - max(nums1)



End of Day 133
