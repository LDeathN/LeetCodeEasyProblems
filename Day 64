#First Problem
class Solution(object):
    def finalPrices(self, prices):
        result = []
        for i in range(len(prices)):
            condition = True
            for j in range(len(prices)):
                if prices[i] >= prices[j] and i != j and j > i:
                    result.append(prices[i] - prices[j])
                    condition = False
                    break
            if condition:
                result.append(prices[i])

        return result



#Second Problem
class Solution(object):
    def runningSum(self, nums):
        count = 0
        result = []
        for num in nums:
            count += num
            result.append(count)

        return result



#Third Problem
SELECT 
    sell_date, 
    COUNT(DISTINCT product) AS num_sold, 
    GROUP_CONCAT(DISTINCT product ORDER BY product ASC SEPARATOR ',') AS products
FROM 
    Activities
GROUP BY 
    sell_date
ORDER BY 
    sell_date;



#Fourth Problem
class Solution(object):
    def xorOperation(self, n, start):
        nums = []
        result = 0
        for i in range(n):
            nums.append(start)
            start += 2
        for i in range(1, len(nums)):
            nums[i] = nums[i-1] ^ nums[i]
            
        return nums.pop()



#Fifth Problem
class Solution(object):
    def average(self, salary):
        salary = sorted(salary)
        res = []
        for i in range(1,len(salary)-1):
            res.append(salary[i])
        return sum(res)/len(res)



End of Day 64
