#First Problem (2744)
class Solution(object):
    def maximumNumberOfStringPairs(self, words):
        word_map = {}
        pairs = 0
        
        for word in words:
            reversed_word = word[::-1]
            if reversed_word in word_map and word_map[reversed_word] > 0:
                pairs += 1
                word_map[reversed_word] -= 1  
            else:
                word_map[word] = word_map.get(word, 0) + 1  
        
        return pairs



#Second Problem (2748)
class Solution(object):
    def countBeautifulPairs(self, nums):
        def first_digit(num):
            while num >= 10:
                num //= 10
            return num

        def gcd(a, b):
            while b != 0:
                a, b = b, a % b
            return a
        
        count = 0
        n = len(nums)
        
        for i in range(n):
            for j in range(i + 1, n):
                first = first_digit(nums[i])
                last = nums[j] % 10
                if gcd(first, last) == 1:
                    count += 1
        
        return count




