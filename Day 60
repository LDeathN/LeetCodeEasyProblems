#First Problem
class Solution(object):
    def getTargetCopy(self, original, cloned, target):
        if not original:
            return None
        
        if original is target:
            return cloned

        left = self.getTargetCopy(original.left, cloned.left, target)
        if left:
            return left

        return self.getTargetCopy(original.right, cloned.right, target)



#Second Problem
class Solution(object):
    def luckyNumbers (self, matrix):
        min_row_elements = [(min(row), i, row.index(min(row))) for i, row in enumerate(matrix)]

        lucky_numbers = []
        for value, row_idx, col_idx in min_row_elements:
            if all(value >= matrix[row][col_idx] for row in range(len(matrix))):
                lucky_numbers.append(value)
        
        return lucky_numbers



#Third Problem
class Solution(object):
    def findTheDistanceValue(self, arr1, arr2, d):
        count = 0
    
        for num1 in arr1:
            valid = True
            for num2 in arr2:
                if abs(num1 - num2) <= d:
                    valid = False
                    break
            if valid:
                count += 1
        
        return count



#Fourth Problem
class Solution(object):
    def createTargetArray(self, nums, index):
        target = []
        for i in range(len(nums)):
            if index[i] >= len(target):
                target.append(nums[i])
            else:
                target.insert(index[i], nums[i])
        
        return target




