#First Problem (2678)
class Solution(object):
    def countSeniors(self, details):
        count = 0
        for detail in details:
            age = int(detail[11:13])

            if age > 60:
                count += 1
                
        return count



#Second Problem (2682)
class Solution(object):
    def circularGameLosers(self, n, k):
        received = set()  
        current = 0     
        step = 1
        
        while current not in received:
            received.add(current)
            current = (current + step * k) % n
            step += 1

        return [i + 1 for i in range(n) if i not in received]



#Third Problem (2695)
/**
 * @param {number[]} nums
 * @return {void}
 */
var ArrayWrapper = function(nums) {
    this.nums = nums;
};

/**
 * @return {number}
 */
ArrayWrapper.prototype.valueOf = function() {
    return this.nums.reduce((sum, num) => sum + num, 0);
}

/**
 * @return {string}
 */
ArrayWrapper.prototype.toString = function() {
    return `[${this.nums.join(',')}]`;
}



#Fourth Problem (2696)
class Solution(object):
    def minLength(self, s):
        stack = []
    
        for char in s:
            if char == 'B' and stack and stack[-1] == 'A':
                stack.pop()
            elif char == 'D' and stack and stack[-1] == 'C':
                stack.pop() 
            else:
                stack.append(char)
        
        return len(stack)




