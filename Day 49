#First Problem
class Solution(object):
    def heightChecker(self, heights):
        expected = sorted(heights)
        count = 0
        for i in range(len(heights)):
            if expected[i] != heights[i]:
                count += 1

        return count



#Second Problem
SELECT
p.product_name,
s.year,
s.price
FROM Sales as s
JOIN Product as p
ON s.product_id = p.product_id



#Third Problem
class Solution(object):
    def gcdOfStrings(self, str1, str2):
        def gcd(a, b):
            while b:
                a, b = b, a % b
            return a
        
        def isDivisor(s, t):
            if len(s) % len(t) != 0:
                return False
            return t * (len(s) // len(t)) == s
        
        gcd_length = gcd(len(str1), len(str2))
        candidate = str1[:gcd_length]
        
        if isDivisor(str1, candidate) and isDivisor(str2, candidate):
            return candidate
        return ""



#Fourth Problem
SELECT p.project_id,
ROUND(AVG(e.experience_years), 2) as 'average_years'
FROM Project as p
JOIN Employee as e
ON e.employee_id = p.employee_id
GROUP BY p.project_id



#Fifth Problem
class Solution(object):
    def findOcurrences(self, text, first, second):
        words = text.split()
        result = []

        for i in range(len(words) - 2):
            if words[i] == first and words[i + 1] == second:
                result.append(words[i + 2])
        
        return result


End of Day 49
