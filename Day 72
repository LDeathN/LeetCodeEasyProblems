#First Problem
class OrderedStream:
    def __init__(self, n):
        self.stream = [None] * n
        self.ptr = 0

    def insert(self, idKey, value):
        self.stream[idKey - 1] = value

        chunk = []
        while self.ptr < len(self.stream) and self.stream[self.ptr] is not None:
            chunk.append(self.stream[self.ptr])
            self.ptr += 1
        
        return chunk



#Second Problem
WITH ProcessDurations AS (
    SELECT 
        machine_id,
        process_id,
        MAX(CASE WHEN activity_type = 'end' THEN timestamp ELSE NULL END) -
        MAX(CASE WHEN activity_type = 'start' THEN timestamp ELSE NULL END) AS duration
    FROM Activity
    GROUP BY machine_id, process_id
),
AverageProcessingTimes AS (
    SELECT
        machine_id,
        ROUND(AVG(duration), 3) AS processing_time
    FROM ProcessDurations
    GROUP BY machine_id
)
SELECT 
    machine_id,
    processing_time
FROM AverageProcessingTimes;



#Third Problem
class Solution(object):
    def arrayStringsAreEqual(self, word1, word2):
        word1 = ''.join(word1)
        word2 = ''.join(word2)
        
        return word1 == word2




