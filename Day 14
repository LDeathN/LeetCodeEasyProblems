#First Problem
class Solution(object):
    def containsNearbyDuplicate(self, nums, k):
        num_indices = {}

        for i, num in enumerate(nums):
            if num in num_indices and abs(i - num_indices[num]) <= k:
                return True
            num_indices[num] = i

        return False



#Second Problem
class Solution(object):
    
            
    def countNodes(self, root):
        if not root:
            return 0
        
        def get_height(node):
            if not node:
                return 0
            return 1 + get_height(node.left)

        left_height = get_height(root.left)
        right_height = get_height(root.right)

        if left_height == right_height:
            return (1 << left_height) + self.countNodes(root.right)
        else:
            return (1 << right_height) + self.countNodes(root.left)




