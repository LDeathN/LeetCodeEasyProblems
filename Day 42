#First Problem
class Solution(object):
    def increasingBST(self, root):
        def in_order_traversal(node):
            if not node:
                return
            in_order_traversal(node.left)
            node.left = None
            self.current.right = node
            self.current = node
            in_order_traversal(node.right)
    
        dummy = TreeNode()
        self.current = dummy
        in_order_traversal(root)
        return dummy.right



#Second Problem
class Solution(object):
    def sortArrayByParity(self, nums):
        result = []
        for num in nums:
            if num % 2 == 0:
                result.insert(0, num)
            else:
                result.append(num)
        
        return result




