#First Problem
class Solution(object):
    def countMatches(self, items, ruleKey, ruleValue):
        count = 0
        for item in items:
            if ruleKey == "type":
                if ruleValue == item[0]:
                    count += 1
            elif ruleKey == "color":
                if ruleValue == item[1]:
                    count += 1
            else:
                if ruleValue == item[2]:
                    count += 1
                    
        return count



#Second Problem
class Solution(object):
    def nearestValidPoint(self, x, y, points):
        min_distance = float('inf')
        result_index = -1
        
        for i, (px, py) in enumerate(points):
            if px == x or py == y:
                distance = abs(x - px) + abs(y - py)
                if distance < min_distance:
                    min_distance = distance
                    result_index = i
        
        return result_index




