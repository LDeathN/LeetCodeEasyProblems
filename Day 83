#First Problem
class Solution(object):
    def findRotation(self, mat, target):
        def rotate_90(mat):
            n = len(mat)
            transposed = [[mat[j][i] for j in range(n)] for i in range(n)]
            for row in transposed:
                row.reverse()
            return transposed

        if mat == target:
            return True
        for _ in range(3):
            mat = rotate_90(mat)
            if mat == target:
                return True
        return False



#Second Problem
SELECT 
    user_id, 
    MAX(time_stamp) AS last_stamp
FROM 
    Logins
WHERE 
    YEAR(time_stamp) = 2020
GROUP BY 
    user_id;



#Third Problem
class Solution(object):
    def isCovered(self, ranges, left, right):
        full_range = set()
        for nums in ranges:
            for num in range(nums[0], nums[1] + 1):
                full_range.add(num)
            
        for i in range(left, right + 1):
            if i not in full_range:
                return False

        return True




