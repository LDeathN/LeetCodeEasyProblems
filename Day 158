#First Problem (172)
class Solution(object):
    def trailingZeroes(self, n):
        count = 0
        while n >= 5:
            n //= 5  
            count += n
        return count



#Second Problem (173)
class BSTIterator(object):

    def __init__(self, root):
        self.stack = []
        self._leftmost_inorder(root)
    
    def _leftmost_inorder(self, node):
        while node:
            self.stack.append(node)
            node = node.left

    def next(self):
        topmost_node = self.stack.pop()
        
        if topmost_node.right:
            self._leftmost_inorder(topmost_node.right)
        
        return topmost_node.val
        

    def hasNext(self):
        return len(self.stack) > 0



#Third Problem (176)
SELECT (
    SELECT DISTINCT salary
    FROM Employee
    ORDER BY salary DESC
    LIMIT 1 OFFSET 1
) AS SecondHighestSalary;




