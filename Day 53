#First Problem
class Solution(object):
    import datetime
    def dayOfTheWeek(self, day, month, year):
        date = datetime.date(year, month, day)
        days_of_week = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday","Sunday"]
        day_index = date.weekday()
        return days_of_week[day_index]



#Second Problem
class Solution(object):
    def maxNumberOfBalloons(self, text):
        found = {}
        for letter in text:
            if letter == "b":
                if letter not in found:
                    found[letter] = 0
                found[letter] += 1
            elif letter == "a":
                if letter not in found:
                    found[letter] = 0
                found[letter] += 1
            elif letter == "l":
                if letter not in found:
                    found[letter] = 0
                found[letter] += 1
            elif letter == "o":
                if letter not in found:
                    found[letter] = 0
                found[letter] += 1
            elif letter == "n":
                if letter not in found:
                    found[letter] = 0
                found[letter] += 1

        result = 10000
        if "b" in found and "a" in found and "l" in found and "o" in found and "n" in found:
            for key, value in found.items():
                if key == "l" or key == "o":
                    value = value // 2
                result = min(result, value)
        else:
            return 0
        return result



#Third Problem
class Solution(object):
    def minimumAbsDifference(self, arr):
        arr = sorted(arr)
        min_diff = float('inf')
        result = []

        for i in range(1, len(arr)):
            diff = arr[i] - arr[i-1]
            if diff < min_diff:
                min_diff = diff

        for i in range(1, len(arr)):
            if arr[i] - arr[i-1] == min_diff:
                result.append([arr[i-1], arr[i]])
        
        return result



#Fourth Problem
class Solution(object):
    def uniqueOccurrences(self, arr):
        occurrences = {}
        check = []
        
        for num in arr:
            if num not in occurrences:
                occurrences[num] = 0
            occurrences[num] += 1
        
        for key, value in occurrences.items():
            if value not in check:
                check.append(value)
            else:
                return False
        
        return True




