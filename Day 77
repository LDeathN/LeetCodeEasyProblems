#First Problem
class Solution(object):
    def check(self, nums):
        count_decreases = 0
        n = len(nums)
        
        for i in range(n):
            if nums[i] > nums[(i + 1) % n]:
                count_decreases += 1
                
            if count_decreases > 1:
                return False
        
        return True



#Second Problem
SELECT product_id
FROM Products
WHERE low_fats = "Y" AND recyclable = "Y";



#Third Problem
class Solution(object):
    def minOperations(self, s):
        n = len(s)
        alt1 = ''.join(['0' if i % 2 == 0 else '1' for i in range(n)])
        alt2 = ''.join(['1' if i % 2 == 0 else '0' for i in range(n)])

        count1 = sum(1 for i in range(n) if s[i] != alt1[i])
        count2 = sum(1 for i in range(n) if s[i] != alt2[i])
        
        return min(count1, count2)



#Fourth Problem
class Solution(object):
    def longestNiceSubstring(self, s):
        if len(s) < 2:
            return ""
    
        def isNice(sub):
            unique_chars = set(sub)
            for char in unique_chars:
                if char.swapcase() not in unique_chars:
                    return False
            return True
        
        def helper(s):
            if isNice(s):
                return s
            
            max_nice_substring = ""
            for i in range(len(s)):
                if s[i].swapcase() not in s:
                    left = helper(s[:i])
                    right = helper(s[i+1:])
                    if len(left) > len(max_nice_substring):
                        max_nice_substring = left
                    if len(right) > len(max_nice_substring):
                        max_nice_substring = right
                    break
            
            return max_nice_substring
        
        return helper(s)



#Fifth Problem
class Solution(object):
    def mergeAlternately(self, word1, word2):
        result = []
        word1 = [el for el in word1]
        word2 = [el for el in word2]
        while word1 or word2:
            if word1:
                result.append(word1.pop(0))
            if word2:
                result.append(word2.pop(0))
        
        return "".join(result)


End of Day 77
