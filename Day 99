#First Problem
class Solution(object):
    def removeAnagrams(self, words):
        def are_anagrams(word1, word2):
            return sorted(word1) == sorted(word2)

        result = []
        for word in words:
            if result and are_anagrams(result[-1], word):
                continue
            result.append(word)
        return result



#Second Problem
class Solution(object):
    def percentageLetter(self, s, letter):
        number = s.count(letter)
        if number == 0:
            return 0
        return 100 * number // len(s)



#Third Problem
class Solution(object):
    def digitCount(self, num):
        for i in range(len(num)):
            current = [char for char in num if i == int(char)]
            if len(current) == int(num[i]):
                pass
            else:
                return False
        return True



#Fourth Problem
class Solution(object):
    from collections import Counter
    def rearrangeCharacters(self, s, target):
        count_s = Counter(s)
        count_target = Counter(target)

        max_copies = float('inf')
        
        for char in count_target:
            if char in count_s:
                max_copies = min(max_copies, count_s[char] // count_target[char])
            else:
                return 0 
        
        return max_copies



#Fifth Problem
class Solution(object):
    def minMaxGame(self, nums):
        while len(nums) != 1:
            newNums = []
            count = 0
            while nums:
                if count % 2 == 0:
                    newNums.append(min(nums.pop(0), nums.pop(0)))
                else:
                    newNums.append(max(nums.pop(0), nums.pop(0)))
                count += 1
            nums = newNums
        
        return nums[0]


End of Day 99
